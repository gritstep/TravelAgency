// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TravelAgency.Tests.CodedUI
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LoginSmokeTest - Use 'LoginSmokeTestParams' to pass parameters into this method.
        /// </summary>
        public void LoginSmokeTest()
        {
            #region Variable Declarations
            HtmlHyperlink uIHomeHyperlink = this.UIHomePagebankruptTravWindow.UIHomePagebankruptTravDocument.UIHomeHyperlink;
            HtmlHyperlink uILoginHyperlink = this.UIHomePagebankruptTravWindow.UIHomePagebankruptTravDocument.UILoginHyperlink;
            HtmlEdit uIEmailEdit = this.UIHomePagebankruptTravWindow.UILoginbankruptTravelDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIHomePagebankruptTravWindow.UILoginbankruptTravelDocument.UIPasswordEdit;
            HtmlInputButton uILoginButton = this.UIHomePagebankruptTravWindow.UILoginbankruptTravelDocument.UILoginFormCustom.UILoginButton;
            WinButton uINotforthissiteButton = this.UIHomePagebankruptTravWindow.UINotificationToolBar.UINotforthissiteButton;
            #endregion

            // Click 'Home' link
            Mouse.Click(uIHomeHyperlink, new Point(41, 26));

            // Click 'Log in' link
            Mouse.Click(uILoginHyperlink, new Point(47, 24));

            // Type 'test@test.pl' in 'Email' text box
            uIEmailEdit.Text = this.LoginSmokeTestParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.LoginSmokeTestParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LoginSmokeTestParams.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(41, 23));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Not for this site' button
            Mouse.Click(uINotforthissiteButton, new Point(69, 15));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;
        }
        
        /// <summary>
        /// LoginSmokeTestAssert - Use 'LoginSmokeTestAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void LoginSmokeTestAssert()
        {
            #region Variable Declarations
            HtmlHyperlink uIHellotesttestplHyperlink = this.UIHomePagebankruptTravWindow.UIHomePagebankruptTravDocument.UILogoutFormCustom.UIHellotesttestplHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Hello test@test.pl!' link contains 'test@test.pl'
            StringAssert.Contains(uIHellotesttestplHyperlink.InnerText, this.LoginSmokeTestAssertExpectedValues.UIHellotesttestplHyperlinkInnerText);
        }
        
        #region Properties
        public virtual LoginSmokeTestParams LoginSmokeTestParams
        {
            get
            {
                if ((this.mLoginSmokeTestParams == null))
                {
                    this.mLoginSmokeTestParams = new LoginSmokeTestParams();
                }
                return this.mLoginSmokeTestParams;
            }
        }
        
        public virtual LoginSmokeTestAssertExpectedValues LoginSmokeTestAssertExpectedValues
        {
            get
            {
                if ((this.mLoginSmokeTestAssertExpectedValues == null))
                {
                    this.mLoginSmokeTestAssertExpectedValues = new LoginSmokeTestAssertExpectedValues();
                }
                return this.mLoginSmokeTestAssertExpectedValues;
            }
        }
        
        public UIHomePagebankruptTravWindow UIHomePagebankruptTravWindow
        {
            get
            {
                if ((this.mUIHomePagebankruptTravWindow == null))
                {
                    this.mUIHomePagebankruptTravWindow = new UIHomePagebankruptTravWindow();
                }
                return this.mUIHomePagebankruptTravWindow;
            }
        }
        #endregion
        
        #region Fields
        private LoginSmokeTestParams mLoginSmokeTestParams;
        
        private LoginSmokeTestAssertExpectedValues mLoginSmokeTestAssertExpectedValues;
        
        private UIHomePagebankruptTravWindow mUIHomePagebankruptTravWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginSmokeTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class LoginSmokeTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'test@test.pl' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "test@test.pl";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "A2RcPsxsl5ATiwB7aYvPzVij3YOpp1Qx";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginSmokeTestAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class LoginSmokeTestAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Hello test@test.pl!' link contains 'test@test.pl'
        /// </summary>
        public string UIHellotesttestplHyperlinkInnerText = "test@test.pl";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePagebankruptTravWindow : BrowserWindow
    {
        
        public UIHomePagebankruptTravWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - bankruptTravel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - bankruptTravel");
            this.WindowTitles.Add("Log in - bankruptTravel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePagebankruptTravDocument UIHomePagebankruptTravDocument
        {
            get
            {
                if ((this.mUIHomePagebankruptTravDocument == null))
                {
                    this.mUIHomePagebankruptTravDocument = new UIHomePagebankruptTravDocument(this);
                }
                return this.mUIHomePagebankruptTravDocument;
            }
        }
        
        public UILoginbankruptTravelDocument UILoginbankruptTravelDocument
        {
            get
            {
                if ((this.mUILoginbankruptTravelDocument == null))
                {
                    this.mUILoginbankruptTravelDocument = new UILoginbankruptTravelDocument(this);
                }
                return this.mUILoginbankruptTravelDocument;
            }
        }
        
        public UINotificationToolBar UINotificationToolBar
        {
            get
            {
                if ((this.mUINotificationToolBar == null))
                {
                    this.mUINotificationToolBar = new UINotificationToolBar(this);
                }
                return this.mUINotificationToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePagebankruptTravDocument mUIHomePagebankruptTravDocument;
        
        private UILoginbankruptTravelDocument mUILoginbankruptTravelDocument;
        
        private UINotificationToolBar mUINotificationToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePagebankruptTravDocument : HtmlDocument
    {
        
        public UIHomePagebankruptTravDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - bankruptTravel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://quality.travelagency/";
            this.WindowTitles.Add("Home Page - bankruptTravel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHomeHyperlink
        {
            get
            {
                if ((this.mUIHomeHyperlink == null))
                {
                    this.mUIHomeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Home";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://quality.travelagency/";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/\"";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIHomeHyperlink.WindowTitles.Add("Home Page - bankruptTravel");
                    #endregion
                }
                return this.mUIHomeHyperlink;
            }
        }
        
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "loginLink";
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://quality.travelagency/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"loginLink\" href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUILoginHyperlink.WindowTitles.Add("Home Page - bankruptTravel");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        
        public UILogoutFormCustom UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHomeHyperlink;
        
        private HtmlHyperlink mUILoginHyperlink;
        
        private UILogoutFormCustom mUILogoutFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILogoutFormCustom : HtmlCustom
    {
        
        public UILogoutFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right\" id=\"logoutForm\" act";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home Page - bankruptTravel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHellotesttestplHyperlink
        {
            get
            {
                if ((this.mUIHellotesttestplHyperlink == null))
                {
                    this.mUIHellotesttestplHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHellotesttestplHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHellotesttestplHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHellotesttestplHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHellotesttestplHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Hello test@test.pl!";
                    this.mUIHellotesttestplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Manage";
                    this.mUIHellotesttestplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Manage";
                    this.mUIHellotesttestplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://quality.travelagency/Manage";
                    this.mUIHellotesttestplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHellotesttestplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "title=\"Manage\" href=\"/Manage\"";
                    this.mUIHellotesttestplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIHellotesttestplHyperlink.WindowTitles.Add("Home Page - bankruptTravel");
                    #endregion
                }
                return this.mUIHellotesttestplHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHellotesttestplHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILoginbankruptTravelDocument : HtmlDocument
    {
        
        public UILoginbankruptTravelDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - bankruptTravel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://quality.travelagency/Account/Login";
            this.WindowTitles.Add("Log in - bankruptTravel");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - bankruptTravel");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in - bankruptTravel");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public UILoginFormCustom UILoginFormCustom
        {
            get
            {
                if ((this.mUILoginFormCustom == null))
                {
                    this.mUILoginFormCustom = new UILoginFormCustom(this);
                }
                return this.mUILoginFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private UILoginFormCustom mUILoginFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILoginFormCustom : HtmlCustom
    {
        
        public UILoginFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "loginForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"loginForm\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Log in - bankruptTravel");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUILoginButton.WindowTitles.Add("Log in - bankruptTravel");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINotificationToolBar : WinToolBar
    {
        
        public UINotificationToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Notification";
            this.WindowTitles.Add("Home Page - bankruptTravel");
            #endregion
        }
        
        #region Properties
        public WinButton UINotforthissiteButton
        {
            get
            {
                if ((this.mUINotforthissiteButton == null))
                {
                    this.mUINotforthissiteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINotforthissiteButton.SearchProperties[WinButton.PropertyNames.Name] = "Not for this site";
                    this.mUINotforthissiteButton.WindowTitles.Add("Home Page - bankruptTravel");
                    #endregion
                }
                return this.mUINotforthissiteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINotforthissiteButton;
        #endregion
    }
}
